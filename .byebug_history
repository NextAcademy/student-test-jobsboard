c
user_params
c
User.roles.keys.c
User.roles.keys
User.roles
c
edit_user_password_path
current_user
exit
c
term.keys.first.gsub(/[^0-9A-Za-z]/, '')
term.keys.first
term.keys
term
c
term != {}
c
term
c
term
c
term
c
term
c
term
c
term
c
term
c
term
c
term
c
term
c
term
c
job.employment_terms.count
job.employment_terms
job.employment_terms.pop
c
term.keys.first.gsub(/[^0-9A-Za-z]/, '')
term.keys.first.gsubterm.keys.first.gsub(/[^0-9A-Za-z]/, '')
term.keys.first.gsub
term.keys.first
term.keys
term
c
term
term.keys.first
c
exit
key.keys.methods
key
term
key
exit
term
c
p term.keys[0]
puts term.keys[0]
print term.keys[0]
puts term.keys[0]
term.keys[0]
term.keys[0].class
term.keys[0]
term.keys
term.keys.class
term.class
term.type
term
term.keys["{\"Freelance\\""]
term.keys["{\"Freelance\\""
term.keys
term.keys[]
term.keys[:Freelance]
term.keys
term.methods
term
c
@job.employment_terms
@job
c
z
@job.errors
@job.valid?.errors
@job.valid?
@job.save.errors
@job.save
@job
c
job_params
@job
c
Job.methods
Job.params
params
@job
c
current_user.admin?
c
@companies.count
@companies.nil?
@companies.nil
@companies
c
Company.where(status: 1).page(params[:page]).per(10).each
Company.where(status: 1).page(params[:page]).per(10)
Company.where(status: 1)
@companies
c
@companies
c
Company.all
@companies
c
company.status.to_sym
company.status.to_i.to_sym
company.status.to_sym
company.status.to_i
company.status
company
c
@companies
c
Company.find_by(status: 0).company_name
Company.find_by(status: 0)
Company.find(status: 0)
current_user.admin?
Company.where(status: 0).first.status
Company.where(status: 0).first
Company.where(status: 0)
@companies
c
params
c
params
